type License {
  key: String
  name: String
  node_id: String
  spdx_id: String
  url: String
}
type Owner {
  avatar_url: String
  events_url: String
  followers_url: String
  following_url: String
  gists_url: String
  gravatar_id: String
  html_url: String
  id: Int
  login: String
  node_id: String
  organizations_url: String
  received_events_url: String
  repos_url: String
  site_admin: Boolean
  starred_url: String
  subscriptions_url: String
  type: String
  url: String
}
type Repository {
  allow_forking: Boolean
  archive_url: String
  archived: Boolean
  assignees_url: String
  blobs_url: String
  branches_url: String
  clone_url: String
  collaborators_url: String
  comments_url: String
  commits_url: String
  compare_url: String
  contents_url: String
  contributors_url: String
  created_at: DateTime
  default_branch: String
  deployments_url: String
  description: String
  disabled: Boolean
  downloads_url: String
  events_url: String
  fork: Boolean
  forks: Int
  forks_count: Int
  forks_url: String
  full_name: String
  git_commits_url: String
  git_refs_url: String
  git_tags_url: String
  git_url: String
  has_discussions: Boolean
  has_downloads: Boolean
  has_issues: Boolean
  has_pages: Boolean
  has_projects: Boolean
  has_wiki: Boolean
  homepage: String
  hooks_url: String
  html_url: String
  id: Int
  is_template: Boolean
  issue_comment_url: String
  issue_events_url: String
  issues_url: String
  keys_url: String
  labels_url: String
  language: String
  languages_url: String
  license: License
  merges_url: String
  milestones_url: String
  mirror_url: JSON
  name: String
  node_id: String
  notifications_url: String
  open_issues: Int
  open_issues_count: Int
  owner: Owner
  private: Boolean
  pulls_url: String
  pushed_at: DateTime
  releases_url: String
  size: Int
  ssh_url: String
  stargazers_count: Int
  stargazers_url: String
  statuses_url: String
  subscribers_url: String
  subscription_url: String
  svn_url: String
  tags_url: String
  teams_url: String
  topics: [JSON]
  trees_url: String
  updated_at: DateTime
  url: String
  visibility: String
  watchers: Int
  watchers_count: Int
  web_commit_signoff_required: Boolean
}

type Query {
  repositories(username: String = "octocat"): [Repository]
    @rest(endpoint: "https://api.github.com/users/$username/repos")
}
